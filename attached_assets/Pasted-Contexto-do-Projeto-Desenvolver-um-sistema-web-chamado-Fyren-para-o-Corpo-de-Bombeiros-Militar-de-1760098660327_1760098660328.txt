Contexto do Projeto:
Desenvolver um sistema web chamado "Fyren" para o Corpo de Bombeiros Militar de Pernambuco (CBMPE).
O objetivo é gerenciar ocorrências em campo (como incêndios, acidentes, resgates e vazamentos), permitindo que equipes registrem, acompanhem, filtrem e atualizem o status das ações em tempo real.

A aplicação deve ser construída com:

Frontend: ReactJS (Next.js opcional), estilização em TailwindCSS

Backend: Firebase (Auth, Firestore, Storage, Hosting)

Integração: Firebase SDK no código (configuração padrão)

Navegação: React Router (para telas: Home, S.O.S, Relatórios, Gráficos, Perfil)

🧱 1. Estrutura das Páginas

Rotas principais (navbar):

/home → Tela inicial (logo, slogan, descrição curta)

/sos → Central de Ocorrências (com subabas)

/relatorio → Relatórios e exportação de formulários

/graficos → Dashboard de ocorrências (painel informativo)

/perfil → Dados do usuário (bombeiro)

🚒 2. Tela: Central de Ocorrências (/sos)

Subabas:

Filtro de Ocorrências

Campos de seleção: Data, Tipo, Região, Status

Lista dinâmica de resultados (tabela com colunas: Data, Tipo, Região, Status)

Filtro por palavra-chave

Dados puxados do Firestore (ocorrencias)

Registrar Ocorrência

Campos:

ID (gerado automaticamente)

Equipe (input)

Região (select)

Viatura (input)

Data e Hora (calendário e hora)

Horário do aviso, Tempo de resposta, Ocorrência (textarea)

Upload opcional: foto e vídeo (enviados para Firebase Storage)

Seleção de:

Natureza

Atividade Operacional

Natureza Inicial do Aviso

Natureza do Atendimento

Botão “Enviar” → grava no Firestore (ocorrencias)

Exibe notificação de sucesso.

Status da Ocorrência

Cards de ocorrências (com número, tipo, região, status e última atualização)

Botões:

Ver histórico → abre modal com registros da linha do tempo

Atualizar status → abre modal com barra de progresso e botão “Confirmar”

Atualização de status em tempo real no Firestore.

📊 3. Tela: Gráficos (/graficos)

Exibir dados do Firestore de forma analítica:

Total de ocorrências: número total (contador)

Status: porcentagem de “Em andamento”, “Concluído”, “Planejado”

Por período (Jan-Jun): gráfico de barras

Tipo (Acidente, Incêndio, Resgate, Vazamento): gráfico de pizza

Categoria mais comum: texto dinâmico com o tipo mais recorrente

Últimos incidentes: lista dos últimos 3 registros (com data e tipo)

Usar Recharts ou Chart.js.

🧮 4. Tela: Relatório (/relatorio)

Filtros: Período, Tipo, Região, Responsável

Tabela de resultados (Data, Tipo, Região, Responsável, Botão “Baixar”)

Geração de PDF com dados da ocorrência (usar jsPDF)

Exibir resumo do relatório no painel lateral

Botão “Baixar Relatório” → gera e baixa o PDF

👩‍🚒 5. Tela: Perfil (/perfil)

Exibir informações do bombeiro logado:

Foto e nome

Cargo (patente)

Unidade (ex: Batalhão 99)

Matrícula

Data de nascimento

Email e telefone

Botões:

“Alterar senha”

“Meus formulários”

“Exportar dados”

Integração com Firebase Auth e Firestore (coleção usuarios).

🔥 6. Funcionalidades Firebase

Coleções no Firestore:

usuarios: {
  uid,
  nome,
  email,
  patente,
  unidade,
  matricula,
  telefone,
  nascimento,
  fotoPerfilURL
}

ocorrencias: {
  id,
  tipo,
  regiao,
  status,
  equipe,
  viatura,
  data,
  horaAviso,
  tempoResposta,
  descricao,
  natureza,
  atividadeOperacional,
  naturezaInicial,
  naturezaAtendimento,
  fotoURL,
  videoURL,
  historico: [
    {
      dataHora,
      evento,
      responsavel
    }
  ]
}


Regras do Firebase Security (para proteger os dados):

{
  "rules": {
    "ocorrencias": {
      ".read": "request.auth != null",
      ".write": "request.auth != null"
    },
    "usuarios": {
      ".read": "request.auth != null",
      ".write": "request.auth.uid == resource.id"
    }
  }
}


Storage:

Pasta /uploads/fotos

Pasta /uploads/videos

Autenticação:

Login via email/senha

Exibir dados do usuário logado no perfil

💡 7. Estilo (UI/UX)

Tema:

Fundo: Azul escuro #0A1B3D

Destaques: Laranja #FF7A00

Texto: Branco e Cinza-claro

Tipografia: “Poppins” ou “Inter”

Botões com animação hover (escurecer)

Ícones: lucide-react ou react-icons

Ações e feedbacks:

Mensagens de sucesso/erro com react-toastify

Modais e botões com shadcn/ui ou react-modal

💻 8. Extras

Responsivo para desktop e tablet

Menu superior fixo com logo “Fyren” e botões: Home, S.O.S, Relatório, Gráficos, Perfil

Ícones de acessibilidade (tema escuro, aumentar/reduzir fonte)

Exibir “Status de Conexão com Firebase” no canto superior direito (opcional)

🔗 9. Entrega e Teste

Hospedar no Firebase Hosting

Testar CRUD completo:

Registrar ocorrência ✅

Atualizar status ✅

Filtrar ✅

Gerar relatório ✅

Exibir gráficos dinâmicos ✅

Login com usuário exemplo:

Email: admin@cbmpe.gov.br

Senha: 123456